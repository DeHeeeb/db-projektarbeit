// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using db_projektarbeit.Model;

namespace db_projektarbeit.Migrations
{
    [DbContext(typeof(ProjectContext))]
    [Migration("20210123153352_inital")]
    partial class inital
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.HasSequence<int>("CustomerNr", "shared")
                .StartsAt(1000L);

            modelBuilder.HasSequence<int>("ProductNr", "shared")
                .StartsAt(10000L);

            modelBuilder.Entity("db_projektarbeit.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Zip")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "St. Gallen",
                            Zip = 9000
                        },
                        new
                        {
                            Id = 2,
                            Name = "Niederuzwil",
                            Zip = 9244
                        },
                        new
                        {
                            Id = 3,
                            Name = "Bettwiesen",
                            Zip = 9553
                        });
                });

            modelBuilder.Entity("db_projektarbeit.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<int>("CustomerNr")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("NEXT VALUE FOR shared.CustomerNr");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CityId = 2,
                            CustomerNr = 0,
                            Name = "Marc Traber AG",
                            Street = "Hauptstrasse 12"
                        },
                        new
                        {
                            Id = 2,
                            CityId = 3,
                            CustomerNr = 0,
                            Name = "Heeb GmbH",
                            Street = "Winkelstrasse 2"
                        });
                });

            modelBuilder.Entity("db_projektarbeit.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Comment = "3456_Haus_Kohl",
                            CustomerId = 1,
                            Date = new DateTime(2020, 12, 30, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            Comment = "123_Haus_Tranz",
                            CustomerId = 1,
                            Date = new DateTime(2020, 10, 11, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            Comment = "000_Haus_google",
                            CustomerId = 2,
                            Date = new DateTime(2020, 11, 2, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("db_projektarbeit.Position", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("Counter")
                        .HasColumnType("int");

                    b.Property<int?>("OrderId")
                        .HasColumnType("int");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("Positions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Counter = 1,
                            OrderId = 1,
                            ProductId = 1,
                            Total = 0m
                        },
                        new
                        {
                            Id = 2,
                            Counter = 3,
                            OrderId = 1,
                            ProductId = 4,
                            Total = 0m
                        },
                        new
                        {
                            Id = 3,
                            Counter = 2,
                            OrderId = 1,
                            ProductId = 5,
                            Total = 0m
                        },
                        new
                        {
                            Id = 4,
                            Counter = 1,
                            OrderId = 2,
                            ProductId = 8,
                            Total = 0m
                        });
                });

            modelBuilder.Entity("db_projektarbeit.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GroupId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductNr")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("NEXT VALUE FOR shared.ProductNr");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Stuhl mit Armlehnen",
                            GroupId = 2,
                            Price = 140m,
                            ProductNr = 0
                        },
                        new
                        {
                            Id = 2,
                            Description = "Stuhl Comfort",
                            GroupId = 2,
                            Price = 170m,
                            ProductNr = 0
                        },
                        new
                        {
                            Id = 3,
                            Description = "Rolli",
                            GroupId = 3,
                            Price = 199.90m,
                            ProductNr = 0
                        },
                        new
                        {
                            Id = 4,
                            Description = "RT-9000",
                            GroupId = 6,
                            Price = 360.50m,
                            ProductNr = 0
                        },
                        new
                        {
                            Id = 5,
                            Description = "Polaroid Thermo",
                            GroupId = 8,
                            Price = 89.90m,
                            ProductNr = 0
                        },
                        new
                        {
                            Id = 6,
                            Description = "HP M123XX",
                            GroupId = 9,
                            Price = 349m,
                            ProductNr = 0
                        },
                        new
                        {
                            Id = 7,
                            Description = "HP M321YY",
                            GroupId = 9,
                            Price = 321m,
                            ProductNr = 0
                        },
                        new
                        {
                            Id = 8,
                            Description = "Brother Deluxe",
                            GroupId = 9,
                            Price = 430m,
                            ProductNr = 0
                        },
                        new
                        {
                            Id = 9,
                            Description = "HP all-in-one",
                            GroupId = 10,
                            Price = 999.90m,
                            ProductNr = 0
                        },
                        new
                        {
                            Id = 10,
                            Description = "Meier (gelb)",
                            GroupId = 11,
                            Price = 2.90m,
                            ProductNr = 0
                        },
                        new
                        {
                            Id = 11,
                            Description = "Meier (blau)",
                            GroupId = 11,
                            Price = 2.30m,
                            ProductNr = 0
                        },
                        new
                        {
                            Id = 12,
                            Description = "Meier (grau)",
                            GroupId = 11,
                            Price = 3m,
                            ProductNr = 0
                        });
                });

            modelBuilder.Entity("db_projektarbeit.ProductGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("ProductGroups");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Büromöbel"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Bürostuhl",
                            ParentId = 1
                        },
                        new
                        {
                            Id = 3,
                            Name = "Korpus",
                            ParentId = 1
                        },
                        new
                        {
                            Id = 4,
                            Name = "Schreibtisch",
                            ParentId = 1
                        },
                        new
                        {
                            Id = 5,
                            Name = "Drucker"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Belegdrucker",
                            ParentId = 5
                        },
                        new
                        {
                            Id = 7,
                            Name = "Farbdrucker",
                            ParentId = 5
                        },
                        new
                        {
                            Id = 8,
                            Name = "Fotodrucker",
                            ParentId = 7
                        },
                        new
                        {
                            Id = 9,
                            Name = "Multifunktionsdrucker",
                            ParentId = 7
                        },
                        new
                        {
                            Id = 10,
                            Name = "Toner",
                            ParentId = 5
                        },
                        new
                        {
                            Id = 11,
                            Name = "Ordner"
                        });
                });

            modelBuilder.Entity("db_projektarbeit.Customer", b =>
                {
                    b.HasOne("db_projektarbeit.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("db_projektarbeit.Order", b =>
                {
                    b.HasOne("db_projektarbeit.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("db_projektarbeit.Position", b =>
                {
                    b.HasOne("db_projektarbeit.Order", "Order")
                        .WithMany("Positions")
                        .HasForeignKey("OrderId");

                    b.HasOne("db_projektarbeit.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId");

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("db_projektarbeit.Product", b =>
                {
                    b.HasOne("db_projektarbeit.ProductGroup", "Group")
                        .WithMany()
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");
                });

            modelBuilder.Entity("db_projektarbeit.ProductGroup", b =>
                {
                    b.HasOne("db_projektarbeit.ProductGroup", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("db_projektarbeit.Order", b =>
                {
                    b.Navigation("Positions");
                });

            modelBuilder.Entity("db_projektarbeit.ProductGroup", b =>
                {
                    b.Navigation("Children");
                });
#pragma warning restore 612, 618
        }
    }
}
